<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>审计日志 - Auth Service</title>
    <style>
        /* ===================== 基础样式重置 ===================== */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #1a1a1a;
            overflow-x: hidden;
        }

        /* ===================== 背景浮动动画 ===================== */
        body::before {
            content: '';
            position: fixed;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
            background-size: 50px 50px;
            animation: float 20s linear infinite;
            z-index: -1;
        }

        @keyframes float {
            0% { transform: translate(0, 0) rotate(0deg); }
            33% { transform: translate(30px, -30px) rotate(120deg); }
            66% { transform: translate(-20px, 20px) rotate(240deg); }
            100% { transform: translate(0, 0) rotate(360deg); }
        }

        /* ===================== 主布局 ===================== */
        .admin-container {
            display: flex;
            min-height: 100vh;
        }

        /* ===================== 侧边栏样式 ===================== */
        .sidebar {
            width: 280px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            box-shadow: 4px 0 20px rgba(0, 0, 0, 0.1);
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            z-index: 1000;
            border-right: 1px solid rgba(255, 255, 255, 0.2);
        }

        .sidebar-header {
            padding: 30px 25px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            position: relative;
            overflow: hidden;
        }

        .sidebar-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100px;
            height: 100px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: pulse 4s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1) translate(0, 0); opacity: 0.5; }
            50% { transform: scale(1.2) translate(-10px, -10px); opacity: 0.8; }
        }

        .sidebar-title {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 5px;
            position: relative;
            z-index: 1;
        }

        .sidebar-subtitle {
            font-size: 14px;
            opacity: 0.8;
            position: relative;
            z-index: 1;
        }

        .sidebar-nav {
            padding: 25px 0;
        }

        .nav-item {
            margin: 8px 20px;
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .nav-item:hover {
            transform: translateX(5px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            text-decoration: none;
            color: #4a5568;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .nav-link::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            transition: left 0.5s ease;
        }

        .nav-link:hover::before {
            left: 100%;
        }

        .nav-link.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        .nav-icon {
            width: 20px;
            height: 20px;
            margin-right: 12px;
            transition: transform 0.3s ease;
        }

        .nav-link:hover .nav-icon {
            transform: scale(1.1) rotate(5deg);
        }

        /* ===================== 主内容区域 ===================== */
        .main-content {
            flex: 1;
            margin-left: 280px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            min-height: 100vh;
        }

        .content-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 25px 35px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .content-title {
            font-size: 28px;
            font-weight: 800;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 8px;
        }

        .content-subtitle {
            color: #6b7280;
            font-size: 16px;
            font-weight: 400;
        }

        .content-body {
            padding: 35px;
        }

        /* ===================== 筛选面板样式 ===================== */
        .filter-panel {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .filter-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
        }

        .filter-label {
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }

        .filter-input, .filter-select {
            padding: 10px 14px;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
        }

        .filter-input:focus, .filter-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
            background: rgba(255, 255, 255, 0.95);
        }

        .filter-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            align-items: center;
        }

        /* ===================== 统计卡片样式 ===================== */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 25px;
        }

        .stats-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            padding: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
        }

        .stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            transform: scaleX(0);
            transition: transform 0.4s ease;
        }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .stats-card:hover::before {
            transform: scaleX(1);
        }

        .stats-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .stats-title {
            font-size: 14px;
            font-weight: 600;
            color: #6b7280;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .stats-icon {
            width: 24px;
            height: 24px;
            color: #667eea;
            opacity: 0.7;
        }

        .stats-value {
            font-size: 32px;
            font-weight: 800;
            color: #1a1a1a;
            margin-bottom: 8px;
        }

        .stats-trend {
            font-size: 12px;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .trend-up {
            color: #059669;
        }

        .trend-down {
            color: #dc2626;
        }

        .trend-stable {
            color: #6b7280;
        }

        /* ===================== 日志表格样式 ===================== */
        .logs-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            overflow: hidden;
        }

        .table-header {
            padding: 20px 25px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .table-title {
            font-size: 18px;
            font-weight: 700;
            color: #1a1a1a;
        }

        .table-actions {
            display: flex;
            gap: 10px;
        }

        .logs-table {
            width: 100%;
            border-collapse: collapse;
        }

        .logs-table th,
        .logs-table td {
            padding: 15px 20px;
            text-align: left;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .logs-table th {
            background: rgba(0, 0, 0, 0.02);
            font-weight: 600;
            color: #374151;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .logs-table td {
            font-size: 14px;
            color: #1a1a1a;
            vertical-align: middle;
        }

        .logs-table tbody tr {
            transition: all 0.3s ease;
        }

        .logs-table tbody tr:hover {
            background: rgba(102, 126, 234, 0.05);
            transform: scale(1.002);
        }

        /* ===================== 日志级别样式 ===================== */
        .log-level {
            display: inline-flex;
            align-items: center;
            padding: 4px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .level-info {
            background: rgba(59, 130, 246, 0.1);
            color: #1d4ed8;
            border: 1px solid rgba(59, 130, 246, 0.2);
        }

        .level-success {
            background: rgba(34, 197, 94, 0.1);
            color: #059669;
            border: 1px solid rgba(34, 197, 94, 0.2);
        }

        .level-warning {
            background: rgba(245, 158, 11, 0.1);
            color: #d97706;
            border: 1px solid rgba(245, 158, 11, 0.2);
        }

        .level-error {
            background: rgba(239, 68, 68, 0.1);
            color: #dc2626;
            border: 1px solid rgba(239, 68, 68, 0.2);
        }

        .level-security {
            background: rgba(147, 51, 234, 0.1);
            color: #7c3aed;
            border: 1px solid rgba(147, 51, 234, 0.2);
        }

        /* ===================== 用户信息样式 ===================== */
        .user-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 12px;
        }

        .user-details {
            flex: 1;
        }

        .user-name {
            font-weight: 600;
            color: #1a1a1a;
            font-size: 14px;
        }

        .user-email {
            font-size: 12px;
            color: #6b7280;
        }

        /* ===================== IP地址样式 ===================== */
        .ip-address {
            font-family: 'Monaco', 'Consolas', monospace;
            background: rgba(0, 0, 0, 0.05);
            padding: 4px 8px;
            border-radius: 6px;
            font-size: 12px;
            color: #374151;
        }

        /* ===================== 时间戳样式 ===================== */
        .timestamp {
            color: #6b7280;
            font-size: 13px;
        }

        .timestamp-date {
            font-weight: 600;
        }

        .timestamp-time {
            font-size: 12px;
            opacity: 0.8;
        }

        /* ===================== 按钮样式 ===================== */
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 10px 20px;
            font-size: 14px;
            font-weight: 600;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.5);
        }

        .btn-secondary {
            background: rgba(107, 114, 128, 0.9);
            color: white;
            box-shadow: 0 4px 15px rgba(107, 114, 128, 0.3);
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(107, 114, 128, 0.4);
        }

        .btn-outline {
            background: transparent;
            color: #667eea;
            border: 2px solid #667eea;
        }

        .btn-outline:hover {
            background: #667eea;
            color: white;
            transform: translateY(-2px);
        }

        .btn-icon {
            width: 16px;
            height: 16px;
            margin-right: 8px;
        }

        /* ===================== 分页样式 ===================== */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            padding: 25px;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
        }

        .pagination-btn {
            padding: 8px 12px;
            border: 2px solid #e5e7eb;
            background: white;
            color: #374151;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 500;
        }

        .pagination-btn:hover {
            border-color: #667eea;
            color: #667eea;
            transform: translateY(-2px);
        }

        .pagination-btn.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-color: #667eea;
            color: white;
        }

        .pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        .pagination-info {
            color: #6b7280;
            font-size: 14px;
            margin: 0 15px;
        }

        /* ===================== 详情弹窗样式 ===================== */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 2000;
        }

        .modal.show {
            display: flex;
        }

        .modal-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid rgba(0, 0, 0, 0.1);
        }

        .modal-title {
            font-size: 20px;
            font-weight: 700;
            color: #1a1a1a;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #6b7280;
            transition: color 0.3s ease;
        }

        .modal-close:hover {
            color: #dc2626;
        }

        .detail-row {
            display: flex;
            margin-bottom: 15px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
            padding-bottom: 10px;
        }

        .detail-label {
            width: 120px;
            font-weight: 600;
            color: #374151;
            font-size: 14px;
        }

        .detail-value {
            flex: 1;
            color: #1a1a1a;
            font-size: 14px;
            word-break: break-all;
        }

        /* ===================== 响应式设计 ===================== */
        @media (max-width: 1200px) {
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .filter-row {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
                transition: transform 0.3s ease;
            }

            .sidebar.active {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
            }

            .content-header, .content-body {
                padding-left: 20px;
                padding-right: 20px;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .logs-table {
                font-size: 12px;
            }

            .logs-table th,
            .logs-table td {
                padding: 10px 8px;
            }

            .user-info {
                flex-direction: column;
                align-items: flex-start;
                gap: 5px;
            }

            .modal-content {
                padding: 20px;
                margin: 20px;
            }
        }

        /* ===================== 动画增强 ===================== */
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .stats-card, .logs-container, .filter-panel {
            animation: slideIn 0.6s ease forwards;
        }

        .stats-card:nth-child(2) { animation-delay: 0.1s; }
        .stats-card:nth-child(3) { animation-delay: 0.2s; }
        .stats-card:nth-child(4) { animation-delay: 0.3s; }
    </style>
</head>
<body>
    <div class="admin-container">
        <!-- 侧边栏导航 -->
        <aside class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <h1 class="sidebar-title">Auth Service</h1>
                <p class="sidebar-subtitle">企业级认证管理平台</p>
            </div>

            <nav class="sidebar-nav">
                <div class="nav-item">
                    <a href="/admin/dashboard" class="nav-link">
                        <svg class="nav-icon" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"/>
                        </svg>
                        仪表板
                    </a>
                </div>

                <div class="nav-item">
                    <a href="/admin/tenants" class="nav-link">
                        <svg class="nav-icon" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                        租户管理
                    </a>
                </div>

                <div class="nav-item">
                    <a href="/admin/users" class="nav-link">
                        <svg class="nav-icon" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                        </svg>
                        用户管理
                    </a>
                </div>

                <div class="nav-item">
                    <a href="/admin/settings" class="nav-link">
                        <svg class="nav-icon" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5 3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97c0-.33-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1c0 .33.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.66Z"/>
                        </svg>
                        配置管理
                    </a>
                </div>

                <div class="nav-item">
                    <a href="/admin/audit-logs" class="nav-link active">
                        <svg class="nav-icon" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
                        </svg>
                        审计日志
                    </a>
                </div>
            </nav>
        </aside>

        <!-- 主内容区域 -->
        <main class="main-content">
            <!-- 页面头部 -->
            <header class="content-header">
                <div>
                    <h1 class="content-title">审计日志</h1>
                    <p class="content-subtitle">系统操作记录和安全事件监控</p>
                </div>
            </header>

            <!-- 页面内容 -->
            <div class="content-body">
                <!-- 统计卡片 -->
                <div class="stats-grid">
                    <div class="stats-card">
                        <div class="stats-header">
                            <span class="stats-title">今日事件</span>
                            <svg class="stats-icon" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M19,3H18V1H16V3H8V1H6V3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V8H19V19Z"/>
                            </svg>
                        </div>
                        <div class="stats-value">1,284</div>
                        <div class="stats-trend trend-up">
                            <svg width="12" height="12" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M7 14l5-5 5 5z"/>
                            </svg>
                            +12.5% 较昨日
                        </div>
                    </div>

                    <div class="stats-card">
                        <div class="stats-header">
                            <span class="stats-title">安全事件</span>
                            <svg class="stats-icon" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1Z"/>
                            </svg>
                        </div>
                        <div class="stats-value">23</div>
                        <div class="stats-trend trend-down">
                            <svg width="12" height="12" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M7 10l5 5 5-5z"/>
                            </svg>
                            -8.2% 较昨日
                        </div>
                    </div>

                    <div class="stats-card">
                        <div class="stats-header">
                            <span class="stats-title">用户操作</span>
                            <svg class="stats-icon" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                            </svg>
                        </div>
                        <div class="stats-value">856</div>
                        <div class="stats-trend trend-up">
                            <svg width="12" height="12" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M7 14l5-5 5 5z"/>
                            </svg>
                            +5.1% 较昨日
                        </div>
                    </div>

                    <div class="stats-card">
                        <div class="stats-header">
                            <span class="stats-title">异常登录</span>
                            <svg class="stats-icon" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M11,7L9.6,8.4L12.2,11H2V13H12.2L9.6,15.6L11,17L16,12L11,7M20,19H12V21H20A2,2 0 0,0 22,19V5A2,2 0 0,0 20,3H12V5H20V19Z"/>
                            </svg>
                        </div>
                        <div class="stats-value">5</div>
                        <div class="stats-trend trend-stable">
                            <svg width="12" height="12" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M8 12l4-4 4 4z"/>
                            </svg>
                            无变化
                        </div>
                    </div>
                </div>

                <!-- 筛选面板 -->
                <div class="filter-panel">
                    <div class="filter-row">
                        <div class="filter-group">
                            <label class="filter-label">日志级别</label>
                            <select class="filter-select" id="logLevel">
                                <option value="">全部级别</option>
                                <option value="info">信息</option>
                                <option value="success">成功</option>
                                <option value="warning">警告</option>
                                <option value="error">错误</option>
                                <option value="security">安全</option>
                            </select>
                        </div>

                        <div class="filter-group">
                            <label class="filter-label">事件类型</label>
                            <select class="filter-select" id="eventType">
                                <option value="">全部类型</option>
                                <option value="user.login">用户登录</option>
                                <option value="user.logout">用户登出</option>
                                <option value="user.register">用户注册</option>
                                <option value="admin.action">管理操作</option>
                                <option value="security.violation">安全违规</option>
                            </select>
                        </div>

                        <div class="filter-group">
                            <label class="filter-label">开始时间</label>
                            <input type="datetime-local" class="filter-input" id="startTime">
                        </div>

                        <div class="filter-group">
                            <label class="filter-label">结束时间</label>
                            <input type="datetime-local" class="filter-input" id="endTime">
                        </div>
                    </div>

                    <div class="filter-row">
                        <div class="filter-group">
                            <label class="filter-label">用户搜索</label>
                            <input type="text" class="filter-input" placeholder="用户名或邮箱" id="userSearch">
                        </div>

                        <div class="filter-group">
                            <label class="filter-label">IP地址</label>
                            <input type="text" class="filter-input" placeholder="192.168.1.1" id="ipAddress">
                        </div>

                        <div class="filter-group">
                            <label class="filter-label">租户</label>
                            <select class="filter-select" id="tenantFilter">
                                <option value="">全部租户</option>
                                <option value="system">系统租户</option>
                                <option value="tenant1">企业A</option>
                                <option value="tenant2">企业B</option>
                            </select>
                        </div>

                        <div class="filter-group">
                            <label class="filter-label">&nbsp;</label>
                            <div class="filter-actions">
                                <button type="button" class="btn btn-outline" onclick="clearFilters()">
                                    <svg class="btn-icon" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"/>
                                    </svg>
                                    清除
                                </button>
                                <button type="button" class="btn btn-primary" onclick="applyFilters()">
                                    <svg class="btn-icon" fill="currentColor" viewBox="0 0 24 24">
                                        <path d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"/>
                                    </svg>
                                    搜索
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 日志表格 -->
                <div class="logs-container">
                    <div class="table-header">
                        <h3 class="table-title">审计日志记录</h3>
                        <div class="table-actions">
                            <button type="button" class="btn btn-outline" onclick="exportLogs()">
                                <svg class="btn-icon" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
                                </svg>
                                导出
                            </button>
                            <button type="button" class="btn btn-secondary" onclick="refreshLogs()">
                                <svg class="btn-icon" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z"/>
                                </svg>
                                刷新
                            </button>
                        </div>
                    </div>

                    <table class="logs-table">
                        <thead>
                            <tr>
                                <th>时间</th>
                                <th>级别</th>
                                <th>事件类型</th>
                                <th>用户</th>
                                <th>IP地址</th>
                                <th>操作描述</th>
                                <th>操作</th>
                            </tr>
                        </thead>
                        <tbody id="logsTableBody">
                            <!-- 动态加载的日志数据 -->
                        </tbody>
                    </table>

                    <!-- 分页 -->
                    <div class="pagination">
                        <button class="pagination-btn" onclick="previousPage()" id="prevBtn">
                            <svg width="16" height="16" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
                            </svg>
                            上一页
                        </button>
                        
                        <div class="pagination-info">
                            第 <span id="currentPage">1</span> 页，共 <span id="totalPages">10</span> 页
                        </div>
                        
                        <button class="pagination-btn" onclick="nextPage()" id="nextBtn">
                            下一页
                            <svg width="16" height="16" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- 详情弹窗 -->
    <div class="modal" id="logModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">日志详情</h3>
                <button class="modal-close" onclick="closeModal()">&times;</button>
            </div>
            <div id="logDetails">
                <!-- 动态填充日志详情 -->
            </div>
        </div>
    </div>

    <script>
        // 页面初始化和功能实现
        document.addEventListener('DOMContentLoaded', function() {
            console.log('✅ 审计日志页面加载完成');
            initializeAuditLogs();
        });

        // 当前页面状态
        let currentPage = 1;
        let totalPages = 10;
        let pageSize = 20;
        let filters = {};

        // 初始化审计日志页面
        function initializeAuditLogs() {
            // 设置默认时间范围
            setDefaultTimeRange();
            
            // 加载日志数据
            loadAuditLogs();
            
            // 绑定事件监听器
            bindEventListeners();
        }

        // 设置默认时间范围（最近7天）
        function setDefaultTimeRange() {
            const now = new Date();
            const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
            
            document.getElementById('endTime').value = formatDateTimeLocal(now);
            document.getElementById('startTime').value = formatDateTimeLocal(weekAgo);
        }

        // 格式化时间为本地时间输入格式
        function formatDateTimeLocal(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            const hours = String(date.getHours()).padStart(2, '0');
            const minutes = String(date.getMinutes()).padStart(2, '0');
            
            return `${year}-${month}-${day}T${hours}:${minutes}`;
        }

        // 绑定事件监听器
        function bindEventListeners() {
            // 筛选器变化事件
            ['logLevel', 'eventType', 'tenantFilter'].forEach(id => {
                document.getElementById(id).addEventListener('change', debounce(applyFilters, 500));
            });

            // 搜索框输入事件
            ['userSearch', 'ipAddress'].forEach(id => {
                document.getElementById(id).addEventListener('input', debounce(applyFilters, 800));
            });

            // 时间范围变化事件
            ['startTime', 'endTime'].forEach(id => {
                document.getElementById(id).addEventListener('change', applyFilters);
            });
        }

        // 防抖函数
        function debounce(func, delay) {
            let timeoutId;
            return function (...args) {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(() => func.apply(this, args), delay);
            };
        }

        // 加载审计日志数据
        async function loadAuditLogs() {
            try {
                showLoadingState(true);
                
                // 构建查询参数
                const params = {
                    page: currentPage,
                    limit: pageSize,
                    ...filters
                };
                
                // 模拟API请求
                const response = await simulateApiRequest('/admin/api/audit-logs', 'GET', params);
                
                // 渲染日志数据
                renderLogsTable(response.data.logs);
                
                // 更新分页信息
                updatePagination(response.data.pagination);
                
            } catch (error) {
                console.error('加载审计日志失败:', error);
                showError('加载审计日志失败，请重试');
            } finally {
                showLoadingState(false);
            }
        }

        // 渲染日志表格
        function renderLogsTable(logs) {
            const tbody = document.getElementById('logsTableBody');
            
            if (!logs || logs.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" style="text-align: center; padding: 40px; color: #6b7280;">
                            <svg width="48" height="48" fill="currentColor" viewBox="0 0 24 24" style="opacity: 0.5; margin-bottom: 10px;">
                                <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
                            </svg>
                            <div>暂无日志数据</div>
                        </td>
                    </tr>
                `;
                return;
            }
            
            tbody.innerHTML = logs.map(log => `
                <tr onclick="showLogDetails('${log.id}')" style="cursor: pointer;">
                    <td>
                        <div class="timestamp">
                            <div class="timestamp-date">${formatDate(log.timestamp)}</div>
                            <div class="timestamp-time">${formatTime(log.timestamp)}</div>
                        </div>
                    </td>
                    <td>
                        <span class="log-level level-${log.level}">${getLevelText(log.level)}</span>
                    </td>
                    <td>${getEventTypeText(log.eventType)}</td>
                    <td>
                        <div class="user-info">
                            <div class="user-avatar">${getUserInitials(log.user?.name || 'System')}</div>
                            <div class="user-details">
                                <div class="user-name">${log.user?.name || '系统用户'}</div>
                                <div class="user-email">${log.user?.email || 'system@auth-service.com'}</div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <span class="ip-address">${log.ipAddress || '-'}</span>
                    </td>
                    <td>${log.description}</td>
                    <td>
                        <button class="btn btn-outline" onclick="event.stopPropagation(); showLogDetails('${log.id}')" style="padding: 6px 12px; font-size: 12px;">
                            详情
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // 格式化日期
        function formatDate(timestamp) {
            return new Date(timestamp).toLocaleDateString('zh-CN', {
                month: '2-digit',
                day: '2-digit'
            });
        }

        // 格式化时间
        function formatTime(timestamp) {
            return new Date(timestamp).toLocaleTimeString('zh-CN', {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            });
        }

        // 获取级别文本
        function getLevelText(level) {
            const levelMap = {
                info: '信息',
                success: '成功',
                warning: '警告',
                error: '错误',
                security: '安全'
            };
            return levelMap[level] || level;
        }

        // 获取事件类型文本
        function getEventTypeText(eventType) {
            const typeMap = {
                'user.login': '用户登录',
                'user.logout': '用户登出',
                'user.register': '用户注册',
                'user.password_change': '密码修改',
                'admin.user_create': '创建用户',
                'admin.user_update': '更新用户',
                'admin.user_delete': '删除用户',
                'admin.tenant_create': '创建租户',
                'admin.settings_update': '更新设置',
                'security.login_failure': '登录失败',
                'security.suspicious_activity': '可疑活动',
                'api.request': 'API请求',
                'system.startup': '系统启动',
                'system.shutdown': '系统关闭'
            };
            return typeMap[eventType] || eventType;
        }

        // 获取用户名首字母
        function getUserInitials(name) {
            if (!name) return 'S';
            return name.split(' ').map(n => n[0]).join('').toUpperCase().substring(0, 2);
        }

        // 更新分页信息
        function updatePagination(pagination) {
            currentPage = pagination.page;
            totalPages = pagination.pages;
            
            document.getElementById('currentPage').textContent = currentPage;
            document.getElementById('totalPages').textContent = totalPages;
            
            document.getElementById('prevBtn').disabled = currentPage <= 1;
            document.getElementById('nextBtn').disabled = currentPage >= totalPages;
        }

        // 应用筛选器
        function applyFilters() {
            // 收集筛选条件
            filters = {
                level: document.getElementById('logLevel').value,
                eventType: document.getElementById('eventType').value,
                tenantId: document.getElementById('tenantFilter').value,
                userSearch: document.getElementById('userSearch').value,
                ipAddress: document.getElementById('ipAddress').value,
                startTime: document.getElementById('startTime').value,
                endTime: document.getElementById('endTime').value
            };
            
            // 重置到第一页
            currentPage = 1;
            
            // 重新加载数据
            loadAuditLogs();
        }

        // 清除筛选器
        function clearFilters() {
            // 重置表单
            document.getElementById('logLevel').value = '';
            document.getElementById('eventType').value = '';
            document.getElementById('tenantFilter').value = '';
            document.getElementById('userSearch').value = '';
            document.getElementById('ipAddress').value = '';
            
            // 重置时间范围
            setDefaultTimeRange();
            
            // 清除筛选条件
            filters = {};
            currentPage = 1;
            
            // 重新加载数据
            loadAuditLogs();
        }

        // 上一页
        function previousPage() {
            if (currentPage > 1) {
                currentPage--;
                loadAuditLogs();
            }
        }

        // 下一页
        function nextPage() {
            if (currentPage < totalPages) {
                currentPage++;
                loadAuditLogs();
            }
        }

        // 刷新日志
        function refreshLogs() {
            loadAuditLogs();
        }

        // 导出日志
        async function exportLogs() {
            try {
                showLoadingState(true);
                
                // 模拟导出API请求
                await simulateApiRequest('/admin/api/audit-logs/export', 'POST', filters);
                
                // 模拟文件下载
                const blob = new Blob(['审计日志导出数据...'], { type: 'text/csv' });
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = `audit-logs-${new Date().toISOString().split('T')[0]}.csv`;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                window.URL.revokeObjectURL(url);
                
                showSuccess('日志导出成功');
                
            } catch (error) {
                console.error('导出日志失败:', error);
                showError('导出日志失败，请重试');
            } finally {
                showLoadingState(false);
            }
        }

        // 显示日志详情
        async function showLogDetails(logId) {
            try {
                // 模拟获取日志详情
                const response = await simulateApiRequest(`/admin/api/audit-logs/${logId}`, 'GET');
                const log = response.data;
                
                // 构建详情HTML
                const detailsHtml = `
                    <div class="detail-row">
                        <span class="detail-label">事件ID:</span>
                        <span class="detail-value">${log.id}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">事件时间:</span>
                        <span class="detail-value">${new Date(log.timestamp).toLocaleString('zh-CN')}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">事件级别:</span>
                        <span class="detail-value">
                            <span class="log-level level-${log.level}">${getLevelText(log.level)}</span>
                        </span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">事件类型:</span>
                        <span class="detail-value">${getEventTypeText(log.eventType)}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">用户信息:</span>
                        <span class="detail-value">
                            ${log.user ? `${log.user.name} (${log.user.email})` : '系统用户'}
                        </span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">租户:</span>
                        <span class="detail-value">${log.tenant?.name || '系统租户'}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">IP地址:</span>
                        <span class="detail-value">${log.ipAddress || '-'}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">用户代理:</span>
                        <span class="detail-value" style="word-break: break-all;">${log.userAgent || '-'}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">操作描述:</span>
                        <span class="detail-value">${log.description}</span>
                    </div>
                    ${log.metadata ? `
                        <div class="detail-row">
                            <span class="detail-label">附加信息:</span>
                            <span class="detail-value">
                                <pre style="background: #f3f4f6; padding: 10px; border-radius: 6px; font-size: 12px; white-space: pre-wrap;">${JSON.stringify(log.metadata, null, 2)}</pre>
                            </span>
                        </div>
                    ` : ''}
                `;
                
                document.getElementById('logDetails').innerHTML = detailsHtml;
                document.getElementById('logModal').classList.add('show');
                
            } catch (error) {
                console.error('获取日志详情失败:', error);
                showError('获取日志详情失败');
            }
        }

        // 关闭模态框
        function closeModal() {
            document.getElementById('logModal').classList.remove('show');
        }

        // 显示加载状态
        function showLoadingState(isLoading) {
            const tbody = document.getElementById('logsTableBody');
            if (isLoading) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" style="text-align: center; padding: 40px;">
                            <svg class="animate-spin" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z"/>
                            </svg>
                            <div style="margin-top: 10px;">加载中...</div>
                        </td>
                    </tr>
                `;
            }
        }

        // 显示成功消息
        function showSuccess(message) {
            showNotification(message, 'success');
        }

        // 显示错误消息
        function showError(message) {
            showNotification(message, 'error');
        }

        // 显示通知
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification notification-${type} show`;
            notification.innerHTML = `<span>${message}</span>`;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }

        // 模拟API请求
        function simulateApiRequest(url, method, data = null) {
            return new Promise((resolve) => {
                setTimeout(() => {
                    // 模拟日志数据
                    const mockLogs = generateMockLogs();
                    
                    if (url.includes('/audit-logs/') && !url.includes('export')) {
                        // 单个日志详情
                        const logId = url.split('/').pop();
                        const log = mockLogs.find(l => l.id === logId) || mockLogs[0];
                        resolve({
                            success: true,
                            data: {
                                ...log,
                                userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
                                metadata: {
                                    requestId: 'req_123456789',
                                    sessionId: 'ses_987654321',
                                    duration: 145,
                                    status: 'success'
                                }
                            }
                        });
                    } else {
                        // 日志列表
                        resolve({
                            success: true,
                            data: {
                                logs: mockLogs.slice((currentPage - 1) * pageSize, currentPage * pageSize),
                                pagination: {
                                    page: currentPage,
                                    limit: pageSize,
                                    total: mockLogs.length,
                                    pages: Math.ceil(mockLogs.length / pageSize)
                                }
                            }
                        });
                    }
                }, 500 + Math.random() * 500);
            });
        }

        // 生成模拟日志数据
        function generateMockLogs() {
            const users = [
                { name: '张三', email: 'zhangsan@example.com' },
                { name: '李四', email: 'lisi@example.com' },
                { name: '王五', email: 'wangwu@example.com' },
                { name: '赵六', email: 'zhaoliu@example.com' }
            ];
            
            const eventTypes = [
                { type: 'user.login', level: 'success', desc: '用户成功登录系统' },
                { type: 'user.logout', level: 'info', desc: '用户退出登录' },
                { type: 'user.register', level: 'success', desc: '新用户注册成功' },
                { type: 'user.password_change', level: 'warning', desc: '用户修改密码' },
                { type: 'admin.user_create', level: 'info', desc: '管理员创建新用户' },
                { type: 'admin.settings_update', level: 'warning', desc: '管理员更新系统设置' },
                { type: 'security.login_failure', level: 'error', desc: '用户登录失败' },
                { type: 'security.suspicious_activity', level: 'security', desc: '检测到可疑活动' },
                { type: 'api.request', level: 'info', desc: 'API接口调用' }
            ];
            
            const logs = [];
            const now = Date.now();
            
            for (let i = 0; i < 200; i++) {
                const eventType = eventTypes[Math.floor(Math.random() * eventTypes.length)];
                const user = Math.random() > 0.1 ? users[Math.floor(Math.random() * users.length)] : null;
                const timestamp = new Date(now - Math.random() * 7 * 24 * 60 * 60 * 1000); // 最近7天
                
                logs.push({
                    id: `log_${i.toString().padStart(6, '0')}`,
                    timestamp: timestamp.toISOString(),
                    level: eventType.level,
                    eventType: eventType.type,
                    description: eventType.desc,
                    user: user,
                    tenant: { id: 'tenant_system', name: '系统租户' },
                    ipAddress: `192.168.1.${Math.floor(Math.random() * 255)}`,
                    userAgent: 'Mozilla/5.0 (compatible; AuthService/1.0)'
                });
            }
            
            return logs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
        }

        // 添加CSS动画
        const style = document.createElement('style');
        style.textContent = `
            .animate-spin {
                animation: spin 1s linear infinite;
            }
            @keyframes spin {
                from { transform: rotate(0deg); }
                to { transform: rotate(360deg); }
            }
            .notification {
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 16px 20px;
                border-radius: 12px;
                box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
                backdrop-filter: blur(20px);
                z-index: 2000;
                transform: translateX(400px);
                transition: transform 0.4s ease;
            }
            .notification.show {
                transform: translateX(0);
            }
            .notification-success {
                background: rgba(34, 197, 94, 0.9);
                color: white;
                border: 1px solid rgba(34, 197, 94, 0.3);
            }
            .notification-error {
                background: rgba(239, 68, 68, 0.9);
                color: white;
                border: 1px solid rgba(239, 68, 68, 0.3);
            }
        `;
        document.head.appendChild(style);

        // 点击模态框外部关闭
        document.getElementById('logModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });
    </script>
</body>
</html>